import React from 'react';
import { WithAnalyticsEventsProps } from '@atlaskit/analytics-next';
import { EditorProps } from '../../types';
import EditorActions from '../../actions';
export declare type FullPageProps = EditorProps & {
    onMount?: (actions: EditorActions) => void;
} & WithAnalyticsEventsProps;
declare const FullPageWithAnalytics: React.ForwardRefExoticComponent<Pick<FullPageProps, "appearance" | "disabled" | "media" | "placeholder" | "defaultValue" | "onChange" | "maxHeight" | "placeholderBracketHint" | "placeholderHints" | "codeBlock" | "mentionProvider" | "emojiProvider" | "autoformattingProvider" | "taskDecisionProvider" | "contextIdentifierProvider" | "collabEditProvider" | "macroProvider" | "searchProvider" | "activityProvider" | "presenceProvider" | "allowBlockType" | "performanceTracking" | "contextPanel" | "quickInsert" | "waitForMediaUpload" | "insertMenuItems" | "editorActions" | "primaryToolbarComponents" | "contentComponents" | "popupsMountPoint" | "popupsBoundariesElement" | "popupsScrollableElement" | "onDestroy" | "onMount" | "saveOnEnter" | "textFormatting" | "maxContentSize" | "transactionTracking" | "onSave" | "onCancel" | "extensionHandlers" | "collabEdit" | "allowBreakout" | "uploadErrorHandler" | "sanitizePrivateContent" | "allowNestedTasks" | "allowExpand" | "shouldFocus" | "allowAnalyticsGASV3" | "contentTransformerProvider" | "primaryToolbarIconBefore" | "secondaryToolbarComponents" | "allowDynamicTextSizing" | "allowTasksAndDecisions" | "allowRule" | "allowTextColor" | "allowTables" | "allowHelpDialog" | "feedbackInfo" | "allowJiraIssue" | "allowPanel" | "allowExtension" | "allowConfluenceInlineComment" | "allowTemplatePlaceholders" | "allowDate" | "allowLayouts" | "allowStatus" | "allowTextAlignment" | "allowIndentation" | "allowNewInsertionBehaviour" | "autoScrollIntoView" | "allowFindReplace" | "UNSAFE_cards" | "errorReporterHandler" | "annotationProviders" | "legacyImageUploadProvider" | "allowKeyboardAccessibleDatepicker" | "onEditorReady" | "mentionInsertDisplayName" | "inputSamplingLimit" | "extensionProviders" | "UNSAFE_predictableLists" | "UNSAFE_useAnalyticsContext" | "elementBrowser"> & React.RefAttributes<any>>;
export { FullPageWithAnalytics as FullPage };
