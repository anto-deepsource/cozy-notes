import { EditorView } from 'prosemirror-view';
import { Plugin } from 'prosemirror-state';
import { ExtensionHandlers, ExtensionProvider, UpdateExtension } from '@atlaskit/editor-common/extensions';
import { ProviderFactory } from '@atlaskit/editor-common/provider-factory';
import { Dispatch, EventDispatcher } from '../../../event-dispatcher';
import { PortalProviderAPI } from '../../../ui/PortalProvider';
import { getPluginState, createCommand } from '../plugin-factory';
import { pluginKey } from '../plugin-key';
export declare const updateEditButton: (view: EditorView, extensionProvider: ExtensionProvider) => Promise<UpdateExtension<any> | undefined>;
export declare const createProviderHandler: (view: EditorView) => (name: string, provider?: Promise<ExtensionProvider<any>> | undefined) => Promise<void>;
declare const createPlugin: (dispatch: Dispatch, providerFactory: ProviderFactory, extensionHandlers: ExtensionHandlers, portalProviderAPI: PortalProviderAPI, eventDispatcher: EventDispatcher, useLongPressSelection?: boolean) => Plugin<any, import("prosemirror-model").Schema<any, any>>;
export { pluginKey, createPlugin, createCommand, getPluginState };
