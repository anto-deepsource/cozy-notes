import { EditorState, Transaction } from 'prosemirror-state';
import { Node, Schema } from 'prosemirror-model';
import { CardReplacementInputMethod } from '../types';
import { CardAdf, CardAppearance } from '@atlaskit/editor-common/provider-factory';
import { Command } from '../../../types';
import { ACTION } from '../../../plugins/analytics';
export declare function insertCard(tr: Transaction, cardAdf: Node, schema: Schema): Transaction<any>;
export declare const replaceQueuedUrlWithCard: (url: string, cardData: CardAdf, analyticsAction?: ACTION | undefined) => Command;
export declare const queueCardsFromChangedTr: (state: EditorState, tr: Transaction, source: CardReplacementInputMethod, normalizeLinkText?: boolean) => Transaction;
export declare const convertHyperlinkToSmartCard: (state: EditorState, source: CardReplacementInputMethod, appearance: CardAppearance, normalizeLinkText?: boolean) => Transaction;
export declare const changeSelectedCardToLink: (text?: string | undefined, href?: string | undefined, sendAnalytics?: boolean | undefined) => Command;
export declare const updateCard: (href: string) => Command;
export declare const changeSelectedCardToText: (text: string) => Command;
export declare const setSelectedCardAppearance: (appearance: CardAppearance) => Command;
